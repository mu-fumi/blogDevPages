{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{160:function(e,t,n){\"use strict\";n.r(t);var c=n(1),r=Object(c.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n(\"div\",{staticClass:\"content\"},[n(\"p\",[e._v(\"首先在本地建立好文件夹，然后初始化git仓库：\")]),n(\"pre\",[n(\"code\",[e._v(\"git   init\\n\")])]),n(\"p\",[e._v(\"接下来在github上面克隆项目：\")]),n(\"pre\",[n(\"code\",[e._v(\"git clone   这里写你的项目地址\\n\")])]),n(\"p\",[e._v(\"然后就可以修改，删除，提交代码了\")]),n(\"h4\",{attrs:{id:\"如果需要在新分支上面开发：\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如果需要在新分支上面开发：\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 如果需要在新分支上面开发：\")]),n(\"p\",[e._v(\"查看远程分支：\")]),n(\"pre\",[n(\"code\",[e._v(\"git branch -a                 可以查看远程分支，远程分支会用红色表示出来\\n\")])]),n(\"p\",[e._v(\"如果没有找到   可以试试：\")]),n(\"pre\",[n(\"code\",[e._v(\"git fetch \\ngit pull\\n\")])]),n(\"p\",[e._v(\"或者没有分支的话  可以创建一个分支，用来开发：\")]),n(\"pre\",[n(\"code\",[e._v(\"#这一步是建立本地的分支，建立好之后，\\n#需要推送一次就会在远端建立一个对应的分支了\\ngit checkout -b 分支名字     等同于 git branch 分支名字  git checkout 分支名字     \\n\")])]),n(\"p\",[e._v(\"开发完成了之后：我们提交在我们的分支上去：\")]),n(\"pre\",[n(\"code\",[e._v(\"git add 文件名字\\n\")])]),n(\"p\",[e._v(\"然后切回我们的主要分支，一般默认为 master：\")]),n(\"pre\",[n(\"code\",[e._v(\"git checkout master\\n\")])]),n(\"p\",[e._v(\"最后我们需要合并这两个分支：\")]),n(\"pre\",[n(\"code\",[e._v(\"git merge 刚才我们新建的分支名字\\n\")])]),n(\"p\",[e._v(\"合并完成后（记得要\"),n(\"strong\",[e._v(\"推送\")]),e._v(\"一次），我们就可以删除分支了：\")]),n(\"pre\",[n(\"code\",[e._v(\"git branch -d dev\\n\")])]),n(\"p\",[e._v(\"然后再删除远端的分支：\")]),n(\"pre\",[n(\"code\",[e._v(\"git push --delete origin 分支名字\")])])])}],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}